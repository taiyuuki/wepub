import{i as t,g as e,a as s,b as a,c as i,d as o}from"./subfile-c9305737.js";import n,{promises as r}from"fs";import c from"archiver";import"dayjs";class d{metadata;coverImage;showContents;sections;css;filesForTOC;customFile;images;runtime;_generateContentsCallback;constructor(t){this.metadata={},this.coverImage={},this.showContents=!0,this.sections=[],this.css="",this.filesForTOC=[],this.customFile=[],this.images=[],this.runtime="node",t&&this.setMeta(t)}_verify(){const e=["id","title","author","cover"];if(t(this.metadata))throw new Error("Missing metadata, You can use the setMeta function to set it.");{const t=this.metadata;e.forEach((e=>{const s=t[e];if(null==s||void 0===s||""===s.toString().trim())throw new Error(`Missing required metadata: ${e}`)}))}}setMeta(t){Object.assign(this.metadata,t),this.showContents=t.showContents??!0,t.cover&&this.addCover(t.cover),t.images&&this.addImagesAll(t.images)}addCover(t){this.coverImage="string"==typeof t?{name:e(t),data:t}:{name:t.name,data:t.path}}setContents(t){this._generateContentsCallback=t}addImage(t){"string"==typeof t?this.images.push({name:s(t),data:t}):this.images.push({name:t.name,data:t.path})}addImagesAll(t){t.forEach((t=>{this.addImage(t)}))}addSection(t){let{title:e,overrideFilename:s,content:a,isFrontMatter:i,excludeFromContents:o}=t;if(null==s||void 0===s||""===s.toString().trim()){s=`s${this.sections.length+1}`}s=`${s}.xhtml`,this.sections.push({title:e,content:a,excludeFromContents:o||!1,isFrontMatter:i||!1,overrideFilename:s})}addSectionsAll(t){t.forEach((t=>{this.addSection(t)}))}addCustomFile(t){this.customFile.push(t)}getSectionsCount(){return this.sections.length}addCss(t){this.css=t}genUuid(){return a()}async build(t,e){this._verify();const a=i(this),d=o(t);let h=s(t);h.endsWith(".epub")||(h+=".epub"),await r.mkdir(d).catch((t=>{if(t&&"EEXIST"!==t.code)throw t}));const m=n.createWriteStream(`${d}/${h}`),l=c("zip",{store:!1});l.on("error",(t=>{throw t})),e&&l.on("progress",(t=>{e(100*t.entries.processed/a.length)})),l.pipe(m);for await(const t of a){"OEBPF/images"===t.folder&&(t.content=await r.readFile(t.content));const e=t.folder.length>0?`${t.folder}/${t.name}`:t.name;l.append(t.content,{name:e,store:!t.compress})}l.finalize()}}export{d as default};
